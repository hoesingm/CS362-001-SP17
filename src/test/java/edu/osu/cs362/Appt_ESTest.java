/*
 * This file was automatically generated by EvoSuite
 * Fri May 12 00:22:10 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(299, (-432), (-27), (-3370), (-27), (String) null, "");
      appt0.setDescription("NegativeField");
      assertEquals("NegativeField", appt0.getDescription());
  }

  @Test
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(59, 59, 59, (-1651), 1891, "_mG+`(ev", "_mG+`(ev");
      assertEquals("_mG+`(ev", appt0.getTitle());
      
      appt0.setTitle((String) null);
      assertEquals(59, appt0.getStartDay());
  }

  @Test
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt((-38), 0, 2414, (-38), 0, " ,", " ,");
      appt0.setTitle(" ,");
      assertEquals(0, appt0.getStartMinute());
      assertEquals(2414, appt0.getStartDay());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(" ,", appt0.getTitle());
      assertEquals(" ,", appt0.getDescription());
      assertEquals(-38, appt0.getStartHour());
      assertEquals(-38, appt0.getStartMonth());
  }

  @Test
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "\t", "\t");
      boolean boolean0 = appt0.getValid();
      assertEquals("\t", appt0.getDescription());
      assertEquals(11, appt0.getStartHour());
      assertTrue(boolean0);
      assertEquals(11, appt0.getStartYear());
      assertEquals("\t", appt0.getTitle());
      assertEquals(11, appt0.getStartMinute());
      assertEquals(11, appt0.getStartDay());
      assertEquals(11, appt0.getStartMonth());
  }

  @Test
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(563, 563, 563, 3799, 563, "am", "");
      int int0 = appt0.getStartYear();
      assertEquals("", appt0.getDescription());
      assertEquals(3799, appt0.getStartMonth());
      assertEquals(563, int0);
      assertEquals(563, appt0.getStartDay());
      assertEquals(563, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(563, appt0.getStartHour());
      assertEquals("am", appt0.getTitle());
  }

  @Test
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(2881, 2881, 2881, 0, 0, "1903-07-01T00:00:00Z", "1903-07-01T00:00:00Z");
      int int0 = appt0.getStartMonth();
      assertEquals("1903-07-01T00:00:00Z", appt0.getTitle());
      assertEquals(0, appt0.getStartYear());
      assertEquals(2881, appt0.getStartHour());
      assertEquals(2881, appt0.getStartMinute());
      assertEquals(2881, appt0.getStartDay());
      assertEquals(0, int0);
      assertEquals("1903-07-01T00:00:00Z", appt0.getDescription());
      assertFalse(appt0.getValid());
  }

  @Test
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(3058, 3058, (-493), 3058, 3058, "TZ?kP", "TC[p]-;e%");
      int int0 = appt0.getStartMonth();
      assertEquals(3058, appt0.getStartMinute());
      assertEquals(-493, appt0.getStartDay());
      assertEquals("TC[p]-;e%", appt0.getDescription());
      assertEquals(3058, int0);
      assertEquals("TZ?kP", appt0.getTitle());
      assertEquals(3058, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(3058, appt0.getStartHour());
  }

  @Test
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(31, 31, 31, (-1), 59, (String) null, "/");
      int int0 = appt0.getStartMinute();
      assertEquals(31, appt0.getStartHour());
      assertEquals(31, int0);
      assertEquals(59, appt0.getStartYear());
      assertEquals(31, appt0.getStartDay());
      assertEquals("/", appt0.getDescription());
      assertEquals("", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(-1, appt0.getStartMonth());
  }

  @Test
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "\t", "\t");
      int int0 = appt0.getStartHour();
      assertTrue(appt0.getValid());
      assertEquals(11, int0);
      assertEquals(11, appt0.getStartMonth());
      assertEquals(11, appt0.getStartMinute());
      assertEquals("\t", appt0.getTitle());
      assertEquals(11, appt0.getStartDay());
      assertEquals(11, appt0.getStartYear());
      assertEquals("\t", appt0.getDescription());
  }

  @Test
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt((-38), 0, 2414, (-38), 0, " ,", " ,");
      int int0 = appt0.getStartHour();
      assertEquals(0, appt0.getStartYear());
      assertEquals(-38, appt0.getStartMonth());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(" ,", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals((-38), int0);
      assertEquals(2414, appt0.getStartDay());
      assertEquals(" ,", appt0.getDescription());
  }

  @Test
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "", "J$m]2y$O=)nP");
      int int0 = appt0.getStartDay();
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, int0);
      assertEquals("J$m]2y$O=)nP", appt0.getDescription());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("", appt0.getTitle());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(4367, (-1968), (-4464), 1002, 12, "", "Year");
      int int0 = appt0.getStartDay();
      assertEquals("", appt0.getTitle());
      assertEquals(1002, appt0.getStartMonth());
      assertEquals(12, appt0.getStartYear());
      assertEquals(4367, appt0.getStartHour());
      assertEquals(-1968, appt0.getStartMinute());
      assertEquals("Year", appt0.getDescription());
      assertEquals((-4464), int0);
      assertFalse(appt0.getValid());
  }

  @Test
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "rkg&*Bccz<2pI8X/", "rkg&*Bccz<2pI8X/");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t11/11/11 at 11:11am ,rkg&*Bccz<2pI8X/, rkg&*Bccz<2pI8X/\n", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(19, 19, 19, (-1430), 2977, "InvalidXGCFields", "InvalidXGCFields");
      assertEquals(-1430, appt0.getStartMonth());
      
      appt0.setStartMonth(2977);
      assertEquals("InvalidXGCFields", appt0.getDescription());
  }

  @Test
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(0, 138, 138, 138, 138, "%Y-%M-%DT%h:%m:%s%z", "\n");
      assertFalse(appt0.getValid());
      assertEquals(138, appt0.getStartDay());
      assertEquals(138, appt0.getStartMinute());
      assertEquals("\n", appt0.getDescription());
      assertEquals(138, appt0.getStartYear());
      assertEquals("%Y-%M-%DT%h:%m:%s%z", appt0.getTitle());
      assertEquals(0, appt0.getStartHour());
      assertEquals(138, appt0.getStartMonth());
  }

  @Test
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, ";Q\"q", ";Q\"q");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t12/12/12 at 12:12pm ,;Q\"q, ;Q\"q\n", string0);
  }

  @Test
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 1, 1, "rkg&d*Bccoz<2pI8X/", "rkg&d*Bccoz<2pI8X/");
      String string0 = appt0.toString();
      assertEquals("\t1/1/1 at 1:1am ,rkg&d*Bccoz<2pI8X/, rkg&d*Bccoz<2pI8X/\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(0, (-366), 0, (-4003), (-4003), "", "_+pl");
      String string0 = appt0.toString();
      assertEquals(0, appt0.getStartDay());
      assertEquals("_+pl", appt0.getDescription());
      assertEquals(-4003, appt0.getStartYear());
      assertEquals(-4003, appt0.getStartMonth());
      assertNull(string0);
      assertEquals(0, appt0.getStartHour());
      assertEquals("", appt0.getTitle());
      assertEquals(-366, appt0.getStartMinute());
  }

  @Test
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt(0, (-1317), (-1317), 0, 0, "", "");
      assertEquals(0, appt0.getStartYear());
      
      appt0.setStartYear((-1317));
      int int0 = appt0.getStartYear();
      assertEquals((-1317), int0);
  }

  @Test
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt(0, (-366), 0, (-4003), (-4003), "", "_+pl");
      assertEquals(-366, appt0.getStartMinute());
      
      appt0.setStartMinute((-4003));
      assertEquals(-4003, appt0.getStartYear());
  }

  @Test
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt(0, 59, 1488, 59, 0, "WR)\"rQ1", "|\"s}m\"XIi5 x-kc");
      assertEquals(1488, appt0.getStartDay());
      
      appt0.setStartDay(0);
      assertEquals(59, appt0.getStartMonth());
  }

  @Test
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(0, (-366), 0, (-4003), (-4003), "", "_+pl");
      assertEquals("_+pl", appt0.getDescription());
      
      appt0.setDescription((String) null);
      assertEquals(-4003, appt0.getStartYear());
  }

  @Test
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt(1, 0, 31, (-397), 0, "HMS", "HMS");
      int int0 = appt0.getStartMinute();
      assertEquals(1, appt0.getStartHour());
      assertEquals(31, appt0.getStartDay());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("HMS", appt0.getTitle());
      assertEquals(-397, appt0.getStartMonth());
      assertEquals(0, int0);
      assertEquals("HMS", appt0.getDescription());
  }

  @Test
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "\t", "\t");
      appt0.setStartHour(23);
      assertEquals(23, appt0.getStartHour());
  }

  @Test
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(0, 59, 1488, 59, 0, "WR)\"rQ1", "|\"s}m\"XIi5 x-kc");
      boolean boolean0 = appt0.getValid();
      assertEquals("WR)\"rQ1", appt0.getTitle());
      assertEquals(1488, appt0.getStartDay());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertEquals(59, appt0.getStartMonth());
      assertEquals(59, appt0.getStartMinute());
      assertEquals("|\"s}m\"XIi5 x-kc", appt0.getDescription());
      assertFalse(boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(0, 59, 1488, 59, 0, "WR)\"rQ1", "|\"s}m\"XIi5 x-kc");
      String string0 = appt0.getTitle();
      assertEquals("|\"s}m\"XIi5 x-kc", appt0.getDescription());
      assertEquals(59, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartYear());
      assertEquals(1488, appt0.getStartDay());
      assertEquals(59, appt0.getStartMinute());
      assertEquals("WR)\"rQ1", string0);
  }

  @Test
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(0, 59, 1488, 59, 0, "WR)\"rQ1", "|\"s}m\"XIi5 x-kc");
      int int0 = appt0.getStartYear();
      assertEquals(0, int0);
      assertEquals(59, appt0.getStartMinute());
      assertEquals(59, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals("WR)\"rQ1", appt0.getTitle());
      assertEquals(1488, appt0.getStartDay());
      assertEquals("|\"s}m\"XIi5 x-kc", appt0.getDescription());
      assertFalse(appt0.getValid());
  }

  @Test
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(0, (-366), 0, (-4003), (-4003), "", "_+pl");
      int int0 = appt0.getStartMonth();
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartDay());
      assertEquals("", appt0.getTitle());
      assertEquals(-366, appt0.getStartMinute());
      assertEquals(-4003, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertEquals("_+pl", appt0.getDescription());
      assertEquals((-4003), int0);
  }

  @Test
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt((-1854), (-1854), 0, (-1854), 2389, "G*#KJ/(dlSagiJq", "\n");
      int int0 = appt0.getStartMinute();
      assertEquals(0, appt0.getStartDay());
      assertEquals(2389, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(-1854, appt0.getStartMonth());
      assertEquals((-1854), int0);
      assertEquals("G*#KJ/(dlSagiJq", appt0.getTitle());
      assertEquals(-1854, appt0.getStartHour());
      assertEquals("\n", appt0.getDescription());
  }

  @Test
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(0, 59, 1488, 59, 0, "WR)\"rQ1", "|\"s}m\"XIi5 x-kc");
      int int0 = appt0.getStartHour();
      assertEquals(0, appt0.getStartYear());
      assertEquals("WR)\"rQ1", appt0.getTitle());
      assertEquals(0, int0);
      assertEquals("|\"s}m\"XIi5 x-kc", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals(59, appt0.getStartMonth());
      assertEquals(1488, appt0.getStartDay());
      assertEquals(59, appt0.getStartMinute());
  }

  @Test
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(0, (-366), 0, (-4003), (-4003), "", "_+pl");
      String string0 = appt0.getDescription();
      assertEquals(-4003, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
      assertEquals(-366, appt0.getStartMinute());
      assertEquals("", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals("_+pl", string0);
      assertEquals(-4003, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
  }

  @Test
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(0, 59, 1488, 59, 0, "WR)\"rQ1", "|\"s}m\"XIi5 x-kc");
      int int0 = appt0.getStartDay();
      assertEquals(1488, int0);
      assertEquals(59, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals("|\"s}m\"XIi5 x-kc", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals("WR)\"rQ1", appt0.getTitle());
      assertEquals(59, appt0.getStartMinute());
  }
}
